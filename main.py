import logging
import json
from datetime import datetime, time, timedelta
from aiogram import Bot, Dispatcher, types, F
from aiogram.enums import ParseMode, ChatType
from aiogram.filters import Command, ChatMemberUpdatedFilter, IS_NOT_MEMBER, IS_MEMBER
from aiogram.types import (
    WebAppInfo, 
    Message, 
    ReplyKeyboardMarkup, 
    KeyboardButton,
    ChatMemberUpdated
)
from aiogram.client.default import DefaultBotProperties

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
API_TOKEN = '7676713420:AAH1gzBOLvIYFsn6qxhGaj0ce_rr9ApykLI'
GROUP_ID = -1002414553290
MOSCOW_TZ_OFFSET = timedelta(hours=3)  # UTC+3 –¥–ª—è –ú–æ—Å–∫–≤—ã

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

def is_working_hours():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–±–æ—á–µ–µ –ª–∏ —Å–µ–π—á–∞—Å –≤—Ä–µ–º—è –≤ –ú–æ—Å–∫–≤–µ (—Å 10:00 –¥–æ 22:00)"""
    now_utc = datetime.utcnow()
    now_moscow = now_utc + MOSCOW_TZ_OFFSET
    return time(10, 0) <= now_moscow.time() <= time(22, 0)

async def send_welcome_message(chat_id: int):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    markup = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(
                text="–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É", 
                web_app=WebAppInfo(url="https://alekseys90.github.io/nevelskogo/")
            )]
        ],
        resize_keyboard=True
    )
    await bot.send_message(
        chat_id,
        "–†–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–µ –≤–∏–Ω–æ—Ç–µ–∫–∏ DRINX –ù–µ–≤–µ–ª—å—Å–∫–æ–≥–æ! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.",
        reply_markup=markup
    )

@dp.message(Command("start"))
async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    if is_working_hours():
        await send_welcome_message(message.chat.id)
    else:
        await message.answer(
            "–ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º—ã –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º (—á–∞—Å—ã —Ä–∞–±–æ—Ç—ã —Å 10:00 –¥–æ 22:00).\n\n"
            "–ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –≤ –≤–∏–Ω–æ—Ç–µ–∫–µ DRINX –ù–µ–≤–µ–ª—å—Å–∫–æ–≥–æ —Å 10:00 –¥–æ 22:00!\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è, –Ω–∞–∂–∞–≤ /start"
        )

@dp.message(lambda m: m.web_app_data is not None)
async def handle_web_app_data(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ WebApp"""
    if not is_working_hours():
        await message.answer(
            "‚è≥ <b>–í–∏–Ω–æ—Ç–µ–∫–∞ —Å–µ–π—á–∞—Å –∑–∞–∫—Ä—ã—Ç–∞</b>\n\n"
            "–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É, –Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –µ—ë —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è —Å 10:00.\n"
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ!"
        )
        return

    try:
        data = json.loads(message.web_app_data.data)
        logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {data}")

        text = (
            "üì• <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:</b>\n\n"
            f"üë§ –ò–º—è: {data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"üõé –£—Å–ª—É–≥–∞: {data.get('service_type', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}"
        )

        await bot.send_message(GROUP_ID, text)
        await message.answer("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –ï—Å–ª–∏ —É –í–∞—Å —Å—Ä–æ—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 991 742 20 05 üìû")

    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏. –ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º—ã –Ω–µ –º–æ–∂–µ–º –ø—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 991 742 20 05 üìû")

@dp.message(F.text & ~F.text.startswith('/start'))
async def handle_other_messages(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥—Ä—É–≥–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if not is_working_hours():
        await message.answer(
            "‚è≥ <b>–í–∏–Ω–æ—Ç–µ–∫–∞ —Å–µ–π—á–∞—Å –∑–∞–∫—Ä—ã—Ç–∞</b>\n\n"
            "–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: —Å 10:00 –¥–æ 22:00\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É, –Ω–∞–∂–∞–≤ /start –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è"
        )
    else:
        await message.delete()
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.\n"
            "–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é.",
            reply_markup=types.ReplyKeyboardRemove()
        )

@dp.message()
async def handle_other_content(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    if not is_working_hours():
        await message.answer(
            "‚è≥ <b>–í–∏–Ω–æ—Ç–µ–∫–∞ —Å–µ–π—á–∞—Å –∑–∞–∫—Ä—ã—Ç–∞</b>\n\n"
            "–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 10:00 –¥–æ 22:00\n"
            "–ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è —Å 10:00 –¥–æ 22:00!"
        )
    else:
        await message.delete()

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())